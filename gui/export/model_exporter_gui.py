# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Code\Qt\cnn-eia\loading.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtWebEngineWidgets, QtCore, QtGui, QtWidgets


# noinspection SpellCheckingInspection
class ModelExporterGUI(object):
    def __init__(self, main_window):
        main_window.resize(800, 600)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(main_window.sizePolicy().hasHeightForWidth())
        main_window.setSizePolicy(size_policy)
        main_window.setMinimumSize(QtCore.QSize(800, 600))
        icon = QtGui.QIcon()
        project_dir = __file__.replace("\\", "/").replace("/gui/export/model_exporter_gui.py", "")
        icon.addPixmap(QtGui.QPixmap(project_dir + "/imgs/netron-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        main_window.setWindowIcon(icon)

        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setAutoFillBackground(True)
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)

        self.browser = QtWebEngineWidgets.QWebEngineView(self.centralwidget)
        self.browser.setGeometry(QtCore.QRect(15, 10, 450, 305))
        self.browser.setEnabled(False)
        self.gridLayout.addWidget(self.browser, 0, 0, 1, 2)

        self.statusLabel = QtWidgets.QLabel(self.centralwidget)
        self.gridLayout.addWidget(self.statusLabel, 1, 0, 1, 2)

        self.nextButton = QtWidgets.QPushButton(self.centralwidget)
        self.nextButton.setMaximumSize(QtCore.QSize(75, 25))
        self.gridLayout.addWidget(self.nextButton, 1, 1, 1, 1)

        main_window.setCentralWidget(self.centralwidget)

        self.set_text(main_window)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def set_text(self, main_window):
        main_window.setWindowTitle("Model Preview")
        self.nextButton.setText("Check")

    def attach_functionality(self, m_e):
        self.nextButton.clicked.connect(m_e.check_state)
        self.browser.page().profile().downloadRequested.connect(m_e.on_download_requested)
